{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","Chart","coinId","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","type","options","theme","mode","chart","height","width","toolbar","show","background","yaxis","xaxis","tooltip","y","formatter","value","toFixed","series","map","price","x","time_close","open","high","low","close","colors","fadeIn","keyframes","PriceList","styled","ul","PriceItem","li","props","listColor","accentColor","Menu","span","Value","Price","marketCap","change12h","change7d","toLocaleString","style","currency","Container","div","Header","header","BackButton","button","Title","h1","Loader","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","quotes","USD","market_cap","percent_change_12h","percent_change_7d","loading","Helmet","name","to","pathname","icon","faArrowLeft","rank","symbol","description","total_supply","max_supply","path","CoinsList","Img","img","Coins","slice","coin","id","src","toLowerCase","Router","basename","process","lightTheme","bgColor","darkTheme","GlobalStyle","createGlobalStyle","modes","Toggle","changeTheme","oppositeMode","find","className","onClick","faSun","faMoon","App","queryClient","QueryClient","localTheme","window","localStorage","getItem","initialState","useState","setTheme","client","setItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3452dd6.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\nexport function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinTickers(coinId: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinHistory(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n\r\n  return fetch(\r\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((response) => response.json());\r\n}\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\n\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\ninterface ChartProps {\r\n  coinId: string;\r\n}\r\n\r\nfunction Chart({ coinId }: ChartProps) {\r\n  const { isLoading, data } = useQuery<IHistorical[]>(\r\n    [\"ohlcv\", coinId],\r\n    () => fetchCoinHistory(coinId),\r\n    {\r\n      refetchInterval: 10000,\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      {isLoading ? (\r\n        \"Loading chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"candlestick\"\r\n          options={{\r\n            theme: {\r\n              mode: \"dark\",\r\n            },\r\n            chart: {\r\n              type: \"candlestick\",\r\n              height: 300,\r\n              width: 500,\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n              background: \"transparent\",\r\n            },\r\n            yaxis: {\r\n              show: false,\r\n            },\r\n            xaxis: {\r\n              type: \"datetime\",\r\n            },\r\n            tooltip: {\r\n              y: {\r\n                formatter: (value) => `$${value.toFixed(2)}`,\r\n              },\r\n            },\r\n          }}\r\n          series={[\r\n            {\r\n              data: data?.map((price) => {\r\n                return {\r\n                  x: price.time_close,\r\n                  y: [price.open, price.high, price.low, price.close],\r\n                };\r\n              }),\r\n            },\r\n          ]}\r\n          colors={[\"#546E7A\", \"#E91E63\"]}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\ninterface IPrice {\r\n  price?: number | bigint;\r\n  marketCap?: number;\r\n  change12h?: number;\r\n  change7d?: number;\r\n}\r\n\r\nconst fadeIn = keyframes`\r\n  from {\r\n\t\topacity: 0;\r\n\t\ttransform: translateY(-5%);\r\n    \r\n\t}\r\n\tto {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n\t}\r\n`;\r\n\r\nconst PriceList = styled.ul`\r\n  width: 100%;\r\n  height: 250px;\r\n  li:nth-child(2) {\r\n    animation-delay: 300ms;\r\n  }\r\n\r\n  li:nth-child(3) {\r\n    animation-delay: 600ms;\r\n  }\r\n  li:nth-child(4) {\r\n    animation-delay: 900ms;\r\n  }\r\n`;\r\n\r\nconst PriceItem = styled.li`\r\n  background-color: ${(props) => props.theme.listColor};\r\n  border: 1px solid ${(props) => props.theme.accentColor};\r\n  border-radius: 10px;\r\n  display: flex;\r\n  padding: 15px 40px;\r\n  font-size: 12px;\r\n  margin-bottom: 12px;\r\n  opacity: 0;\r\n  animation: ${fadeIn} 1s ease-out both;\r\n`;\r\n\r\nconst Menu = styled.span`\r\n  color: ${(props) => props.theme.accentColor};\r\n  flex: 1 1 40%;\r\n`;\r\n\r\nconst Value = styled.span`\r\n  flex: 1 1 60%;\r\n`;\r\n\r\nconst Price = ({ price, marketCap, change12h, change7d }: IPrice) => {\r\n  return (\r\n    <PriceList>\r\n      <PriceItem>\r\n        <Menu>Price</Menu>\r\n        <Value>${price}</Value>\r\n      </PriceItem>\r\n      <PriceItem>\r\n        <Menu>12h %</Menu>\r\n        <Value>{change12h}%</Value>\r\n      </PriceItem>\r\n      <PriceItem>\r\n        <Menu>7d %</Menu>\r\n        <Value>{change7d}%</Value>\r\n      </PriceItem>\r\n      <PriceItem>\r\n        <Menu>Market Cap</Menu>\r\n        <Value>\r\n          {marketCap?.toLocaleString(\"en-us\", {\r\n            style: \"currency\",\r\n            currency: \"USD\",\r\n          })}\r\n        </Value>\r\n      </PriceItem>\r\n    </PriceList>\r\n  );\r\n};\r\n\r\nexport default Price;\r\n","import { useQuery } from \"react-query\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  a {\r\n    transform: translate(-10px, 5px);\r\n  }\r\n`;\r\n\r\nconst BackButton = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  color: ${(props) => props.theme.accentColor};\r\n  font-size: 1.5em;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: ${(props) => props.theme.listColor};\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 33%;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: ${(props) => props.theme.listColor};\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  border: ${(props) =>\r\n    props.isActive ? `2px solid ${props.theme.accentColor}` : `none`};\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    padding: 7px 0px;\r\n    display: block;\r\n  }\r\n`;\r\n\r\ninterface RouteState {\r\n  name: string;\r\n}\r\n\r\ninterface InfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\nexport interface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      price: number;\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nfunction Coin() {\r\n  const { coinId } = useParams<RouteParams>();\r\n  const { state } = useLocation<RouteState>();\r\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\r\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\r\n\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\r\n    [\"info\", coinId],\r\n    () => fetchCoinInfo(coinId)\r\n  );\r\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\r\n    [\"tickers\", coinId],\r\n    () => fetchCoinTickers(coinId)\r\n  );\r\n\r\n  const price = tickersData?.quotes.USD.price;\r\n  const marketCap = tickersData?.quotes.USD.market_cap;\r\n  const change12h = tickersData?.quotes.USD.percent_change_12h;\r\n  const change7d = tickersData?.quotes.USD.percent_change_7d;\r\n\r\n  const loading = infoLoading || tickersLoading;\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </title>\r\n      </Helmet>\r\n      <Header>\r\n        <Link\r\n          to={{\r\n            pathname: \"/\",\r\n          }}\r\n        >\r\n          <BackButton>\r\n            <FontAwesomeIcon icon={faArrowLeft}></FontAwesomeIcon>\r\n          </BackButton>\r\n        </Link>\r\n        <Title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </Title>\r\n      </Header>\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n          <Switch>\r\n            <Route path={`/:coinId/price`}>\r\n              <Price\r\n                price={price}\r\n                marketCap={marketCap}\r\n                change12h={change12h}\r\n                change7d={change7d}\r\n              />\r\n            </Route>\r\n            <Route path={`/:coinId/chart`}>\r\n              <Chart coinId={coinId} />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coin;\r\n","import { Link } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"../api\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CoinsList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n  background-color: ${(props) => props.theme.listColor};\r\n  color: ${(props) => props.theme.textColor};\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  a {\r\n    padding: 20px;\r\n    transition: color 0.2s ease-in;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 35px;\r\n  height: 35px;\r\n  margin-right: 10px;\r\n`;\r\n\r\ninterface ICoin {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nfunction Coins() {\r\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>COINS</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>COINS</Title>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <CoinsList>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/${coin.id}/chart`,\r\n                  state: { name: coin.name },\r\n                }}\r\n              >\r\n                <Img\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinsList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coins;\r\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Coin from \"./routes/Coin\";\r\nimport Coins from \"./routes/Coins\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route path=\"/:coinId\">\r\n          <Coin />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Coins />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  bgColor: \"#f7f1e3\",\r\n  textColor: \"#2f3640\",\r\n  accentColor: \"#2980b9\",\r\n  listColor: \"#c7ecee\",\r\n};\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"#2f3640\",\r\n  textColor: \"#f5f6fa\",\r\n  accentColor: \"#8c7ae6\",\r\n  listColor: \"black\",\r\n};\r\n","import React, { useState } from \"react\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { lightTheme, darkTheme } from \"./theme\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMoon, faSun } from \"@fortawesome/free-solid-svg-icons\";\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, menu, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  main, menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, main, menu, nav, section {\n    display: block;\n  }\n  /* HTML5 hidden-attribute fix for newer browsers */\n  *[hidden] {\n      display: none;\n  }\n  body {\n    line-height: 1;\n  }\n  menu, ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-family: 'Source Sans Pro', sans-serif;\n    background-color: ${(props) => props.theme.bgColor};\n    color: ${(props) => props.theme.textColor};\n    line-height: 1.2;\n    transition: all 0.25s linear;\n  }\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n  button{\n    cursor: pointer;\n  }\n  .toggltBtn {\n    background-color: transparent;\n    border: none;\n    border-radius: 10px;\n    display:flex;\n    flex-direction: column;\n    align-items: center;\n    position: absolute;\n    font-size: 25px;\n    right: 25px;\n    top: 25px;\n    &.darkTheme {\n      color: ${(props) => props.theme.textColor};\n    }\n    &.lightTheme {\n      color: ${(props) => props.theme.textColor};\n    }\n    span{\n      font-size: 10px;\n      margin-top: 5px;\n    }\n  }\n`;\n\ninterface IToggle {\n  changeTheme: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  theme: string;\n}\n\nconst modes = [\"darkTheme\", \"lightTheme\"];\n\nconst Toggle = ({ changeTheme, theme }: IToggle) => {\n  const notSelected = modes.find((mode) => mode !== theme);\n  const oppositeMode = notSelected === \"lightTheme\" ? \"Light\" : \"Dark\";\n\n  return (\n    <>\n      <button className={`toggltBtn ${theme}`} onClick={changeTheme}>\n        {theme === \"darkTheme\" ? (\n          <FontAwesomeIcon icon={faSun} />\n        ) : (\n          <FontAwesomeIcon icon={faMoon} />\n        )}\n        <span>To {oppositeMode} mode</span>\n      </button>\n    </>\n  );\n};\n\nfunction App() {\n  const queryClient = new QueryClient();\n\n  const localTheme = window.localStorage.getItem(\"theme\");\n  const initialState = localTheme ? localTheme : \"darkTheme\";\n  const [theme, setTheme] = useState(initialState);\n\n  const toggleTheme = () => {\n    if (theme === \"lightTheme\") {\n      setTheme(\"darkTheme\");\n      window.localStorage.setItem(\"theme\", \"darkTheme\");\n    } else {\n      setTheme(\"lightTheme\");\n      window.localStorage.setItem(\"theme\", \"lightTheme\");\n    }\n  };\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme === \"lightTheme\" ? lightTheme : darkTheme}>\n        <GlobalStyle />\n        <Toggle changeTheme={toggleTheme} theme={theme} />\n        <Router />\n        <ReactQueryDevtools />\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}